{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","App.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","service/fetchApi.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","service/mapper.js","index.js"],"names":["module","exports","fetchApi","searchQuery","page","axios","get","then","r","data","hits","propTypes","onSearch","PropTypes","string","isRequired","number","Searchbar","onSubmit","useState","setSearchQuery","className","cs","SearchForm","e","preventDefault","trim","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","SearchFormBtn","SearchFormBtnLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","target","value","toLowerCase","ImageGalleryItem","webformatURL","id","openImage","largeImageURL","onClick","src","alt","ImageGalleryItemImage","ImageGallery","map","Button","rootModal","document","querySelector","Modal","onClose","children","firstRender","useRef","useEffect","window","addEventListener","handleKeyDown","current","removeEventListener","code","createPortal","Overlay","currentTarget","App","images","setImages","setPage","error","setError","status","setStatus","viewModal","setViewModal","modalImage","setModalImage","catch","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","query","style","fontWeight","fontSize","textAlign","length","largeImage","i","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b901751d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1-oSf\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__34kgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__f0PEm\",\"Modal\":\"Modal_Modal__34CbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3VQwh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__29TnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ULwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__vu6Vt\",\"SearchForm\":\"Searchbar_SearchForm__3XS0y\",\"SearchFormBtn\":\"Searchbar_SearchFormBtn__21Pvo\",\"SearchFormBtnLabel\":\"Searchbar_SearchFormBtnLabel__2ZJtp\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2eaGT\"};","// import { createClient } from 'pexels';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst fetchApi = (searchQuery, page) => {\r\n    const KEY = '23540071-e77d0cd4225c02caa21321106';\r\n    const BASE_URL = 'https://pixabay.com/api/';\r\n    return axios.get(`${BASE_URL}?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`).then(r => r.data.hits);\r\n};\r\n\r\n// const fetchApi = (onSearch, page) => {\r\n//     const client = createClient('563492ad6f9170000100000187edd7a1e3164e24b88262e5ea6f2f2b');\r\n//     const query = onSearch;\r\n\r\n//     return client.photos.search({ query, page: page, per_page: 12 }).then(photos => photos.json());\r\n// };\r\n\r\n// const fetchApi = (onSearch, page) => {\r\n//     const KEY = 'a92e1c28ff5839246667e5b68c28f141';\r\n//     const BASE_URL = 'https://api.themoviedb.org/3/';\r\n//     const language = 'en-US';\r\n//     return axios.get(`${BASE_URL}search/movie?api_key=${KEY}&language=${language}&page=${page}&per_page=12&include_adult=false&query=${onSearch}`).then(r => r.data.results);\r\n// };\r\nfetchApi.propTypes = {\r\n    onSearch: PropTypes.string.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default fetchApi;\r\n","import { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport cs from \"./Searchbar.module.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const imageChange = (e) => {\r\n    setSearchQuery(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const imageSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (searchQuery.trim() === \"\") {\r\n      toast.warn(\"Введите запрос!\", {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    onSubmit(searchQuery);\r\n    setSearchQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className={cs.Searchbar}>\r\n        <form className={cs.SearchForm} onSubmit={imageSubmit}>\r\n          <button type=\"submit\" className={cs.SearchFormBtn}>\r\n            <span className={cs.SearchFormBtnLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={cs.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={imageChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n// export default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cs from \"./ImageGalleryItem.module.css\";\r\n// import Modal from \"../Modal/Modal\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL, id, openImage, largeImageURL }) => {\r\n  return (\r\n    <li\r\n      className={cs.ImageGalleryItem}\r\n      key={id}\r\n      onClick={() => {\r\n        openImage(largeImageURL);\r\n      }}\r\n    >\r\n      <img src={webformatURL} alt=\"\" className={cs.ImageGalleryItemImage} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  openImage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cs from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ onSearch, openImage }) => {\r\n  return (\r\n    <>\r\n      <ul className={cs.ImageGallery}>\r\n        {onSearch.map(({ webformatURL, id, largeImageURL }) => (\r\n          <>\r\n            <ImageGalleryItem\r\n              webformatURL={webformatURL}\r\n              id={id}\r\n              largeImageURL={largeImageURL}\r\n              openImage={openImage}\r\n            />\r\n          </>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  openImage: PropTypes.func.isRequired,\r\n  onSearch: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cs from \"./Button.module.css\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" className={cs.Button} onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport cs from \"./Modal.module.css\";\r\n\r\nconst rootModal = document.querySelector(\"#rootModal\");\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  const firstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n    }\r\n    return window.removeEventListener(\"keydown\", handleKeyDown);\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={cs.Overlay} onClick={handleBackdropClick}>\r\n      <div className={cs.Modal}>{children}</div>\r\n    </div>,\r\n    rootModal\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport cs from './App.module.css';\r\nimport { mapper } from \"./service/mapper\";\r\nimport fetchApi from \"./service/fetchApi\";\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Button from './components/Button/Button';\r\nimport Modal from './components/Modal/Modal';\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [error, setError] = useState('');\r\n  const [status, setStatus] = useState('idle');\r\n  const [viewModal, setViewModal] = useState(false);\r\n  const [modalImage, setModalImage] = useState('');\r\n\r\n  useEffect(() => {\r\n\t\tconst getImages = () => {\r\n      if (!searchQuery) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetStatus('pending');\r\n\t\t\tfetchApi(searchQuery, page)\r\n\t\t\t\t.then((hits) => {\r\n\t\t\t\t\tsetImages((images) => [...images, ...mapper(hits)]);\r\n\t\t\t\t\tsetStatus('resolved');\r\n\t\t\t\t})\r\n\t\t\t\t.catch(({ message }) => {\r\n\t\t\t\t\tsetError(message);\r\n\t\t\t\t\tsetStatus('rejected');\r\n\t\t\t\t})\r\n\t\t\t\t.finally(() => {\r\n\t\t\t\t\twindow.scrollTo({\r\n\t\t\t\t\t\ttop: document.documentElement.scrollHeight,\r\n\t\t\t\t\t\tbehavior: 'smooth',\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t};\r\n\t\tgetImages();\r\n\t}, [searchQuery, page]);\r\n\r\n  const loadMore = e => {\r\n    e.preventDefault();\r\n    setPage(i => i + 1);\r\n  }\r\n\r\n  const formSubmit = query => {\r\n    setSearchQuery(query);\r\n    setPage(1);\r\n    setImages([]);\r\n  }\r\n\r\n  const toggleModal = () => {\r\n    setViewModal(!viewModal);\r\n\r\n  };\r\n\r\n  const openImage = (largeImage) => {\r\n    setModalImage(largeImage);\r\n    toggleModal();\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className={cs.App}>\r\n      <Searchbar onSubmit={formSubmit}/>\r\n      {(status === 'idle') &&\r\n        <div style={{fontWeight: '500', fontSize: '30px', textAlign: 'center'}}>Введите название</div>\r\n      }\r\n      {(status === 'rejected') &&\r\n        <div style={{fontWeight: '700', fontSize: '50px', textAlign: 'center'}}>{error}</div>\r\n      }\r\n      {(images.length > 0) && \r\n        <>\r\n          <ImageGallery onSearch={images} openImage={openImage} />\r\n          <Button onClick={loadMore} page={page} />\r\n        </>\r\n      }\r\n      {(status === \"pending\") && \r\n        <Loader\r\n          type=\"Puff\"\r\n           color=\"#00BFFF\"\r\n           height={100}\r\n           width={100}\r\n           timeout={3000} //3 secs\r\n        />\r\n      }\r\n      {viewModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <img src={modalImage} alt='' />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n    </>\r\n  )\r\n};\r\n","export const mapper = (imgs) => {\r\n\treturn imgs.map(({ id, webformatURL, largeImageURL }) => ({\r\n\t\tid, webformatURL, largeImageURL\r\n\t}));\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}